name: Update Multi Rules
on:
  workflow_dispatch:  # 手动触发
  schedule:
    - cron: '0 */12 * * *'  # 与basic工作流保持相同调度频率
  push:
    branches: [ "multi" ]  # 仅在multi分支推送时触发
    paths:
      - 'data/mod/**'      # 监测mod配置变更

permissions:
  contents: write        # 用于代码提交推送
  actions: write         # 用于删除旧工作流记录和工件

jobs:
  update:
    runs-on: ubuntu-latest
    env:
      DATA_DIR: ${{ github.workspace }}/data
      PYTHON_SCRIPTS: ${{ github.workspace }}/data/python
      MIHOMO_BIN: ${{ github.workspace }}/data/mihomo-tool
      MAIN_BRANCH: multi  # 关联multi分支
      TEMP_DIR: 'tmp'     # 添加临时目录环境变量

    steps:
      # 1. 拉取代码（multi分支）
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ env.MAIN_BRANCH }}

      # 2. 设置Python环境
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      # 3. 安装系统依赖
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq moreutils

      # 4. 安装Python依赖
      - name: Install Python dependencies
        run: |
          pip install --upgrade pip
          pip install requests chardet adblockparser IPy pyyaml beautifulsoup4 pytz aiohttp psutil tldextract maxminddb xxhash python-whois aiodns pybloom-live

      # 5. 检测文件变更
      - name: Detect changed files
        id: changes
        uses: tj-actions/changed-files@v42
        with:
          files: |
            data/mod/**

      # 6. 运行dl.py（独立步骤）
      - name: Run dl.py
        run: |
          cd ${{ github.workspace }}
          python ${{ env.PYTHON_SCRIPTS }}/dl.py

      # 7. 运行merge.py（独立步骤）
      - name: Run merge.py (广告规则合并去重)
        run: |
          cd ${{ github.workspace }}
          python ${{ env.PYTHON_SCRIPTS }}/merge.py
          echo "广告规则合并完成"

      # 8. 运行filter_cleaner.py（独立步骤）
      - name: Run filter_cleaner.py
        run: |
          cd ${{ github.workspace }}
          python ${{ env.PYTHON_SCRIPTS }}/filter_cleaner.py

      # 9. 生成多格式规则
      - name: Generate multi-format rules
        run: |
          cd ${{ github.workspace }}
          python ${{ env.PYTHON_SCRIPTS }}/filter_adg.py
          python ${{ env.PYTHON_SCRIPTS }}/filter_adh.py
          python ${{ env.PYTHON_SCRIPTS }}/filter_adp.py
          python ${{ env.PYTHON_SCRIPTS }}/filter_pihole.py
          python ${{ env.PYTHON_SCRIPTS }}/filter_hosts.py
          python ${{ env.PYTHON_SCRIPTS }}/filter_ubo.py
          python ${{ env.PYTHON_SCRIPTS }}/filter_adp.py
          python ${{ env.PYTHON_SCRIPTS }}/filter_clash.py
          python ${{ env.PYTHON_SCRIPTS }}/filter_mihomo.py

      # 10. 更新文档
      - name: Update documentation
        run: |
          cd ${{ github.workspace }}
          python ${{ env.PYTHON_SCRIPTS }}/title.py
          python ${{ env.PYTHON_SCRIPTS }}/readme.py

      # 11. 提交变更
      - name: Commit changes
        id: commit
        run: |
          cd ${{ github.workspace }}
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Actions"
          git add --all
          
          if git diff --staged --quiet; then
            echo "No changes to commit"
            echo "has_changes=false" >> $GITHUB_OUTPUT
          else
            echo "has_changes=true" >> $GITHUB_OUTPUT
            git commit -m "Multi-format update: Rules [$(date +'%Y-%m-%d %H:%M:%S') UTC+8]"
          fi

      # 12. 推送变更
      - name: Push changes
        if: steps.commit.outputs.has_changes == 'true'
        run: |
          cd ${{ github.workspace }}
          for i in 1 2 3; do
            git pull --rebase origin ${{ env.MAIN_BRANCH }}
            git push origin ${{ env.MAIN_BRANCH }} && break || sleep 5
          done

      # 13. 清理旧工作流
      - name: Cleanup old workflows
        uses: Mattraks/delete-workflow-runs@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}
          retain_days: 0
          keep_minimum_runs: 3

      # 14. 清理旧工件
      - name: Cleanup old artifacts
        uses: c-hive/gha-remove-artifacts@v1.4.0
        with:
          age: '7 days'